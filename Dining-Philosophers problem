#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

#define N 5  

sem_t chopstick[N];

void* philosopher(void* num) {
    int id = *(int*)num;

    printf("Philosopher %d is thinking...\n", id);
    sleep(1);


    sem_wait(&chopstick[id]);
    sem_wait(&chopstick[(id+1)%N]);

    printf("Philosopher %d is eating...\n", id);
    sleep(2);

   
    sem_post(&chopstick[id]);
    sem_post(&chopstick[(id+1)%N]);

    printf("Philosopher %d finished eating.\n", id);

    return NULL;
}

int main() {
    int i;
    pthread_t tid[N];
    int ids

output 1
Philosopher 0 is thinking...
Philosopher 1 is thinking...
Philosopher 2 is thinking...
Philosopher 3 is thinking...
Philosopher 4 is thinking...
Philosopher 0 is eating...
Philosopher 1 is eating...
Philosopher 0 finished eating.
Philosopher 2 is eating...
Philosopher 1 finished eating.
Philosopher 3 is eating...
Philosopher 2 finished eating.
Philosopher 4 is eating...
Philosopher 3 finished eating.
Philosopher 4 finished eating.

output 2 
Philosopher 2 is thinking...
Philosopher 0 is thinking...
Philosopher 1 is thinking...
Philosopher 3 is thinking...
Philosopher 4 is thinking...
Philosopher 2 is eating...
Philosopher 4 is eating...
Philosopher 2 finished eating.
Philosopher 0 is eating...
Philosopher 4 finished eating.
Philosopher 1 is eating...
Philosopher 0 finished eating.
Philosopher 3 is eating...
Philosopher 1 finished eating.
Philosopher 3 finished eating.
