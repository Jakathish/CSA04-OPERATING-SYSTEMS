#include <stdio.h>
#include <unistd.h>
#include <string.h>

int main() {
    int fd[2];       
    pid_t pid;
    char msg[] = "Hello from parent!";
    char buffer[50];

    if (pipe(fd) == -1) {
        printf("Pipe failed!\n");
        return 1;
    }

    pid = fork();  // create child process

    if (pid < 0) {
        printf("Fork failed!\n");
        return 1;
    }

    if (pid > 0) {  
        close(fd[0]); 
        write(fd[1], msg, strlen(msg)+1);
        close(fd[1]);
    } else {  
        close(fd[1]);  
        read(fd[0], buffer, sizeof(buffer));
        printf("Child received: %s\n", buffer);
        close(fd[0]); 
    }

    return 0;
}

output

Child received: Hello from parent!
